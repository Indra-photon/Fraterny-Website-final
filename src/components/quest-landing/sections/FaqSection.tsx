// /src/components/quest-landing/sections/FaqSection.tsx

import React, { useState } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { Plus, X } from 'lucide-react';

interface FaqSectionProps {
  className?: string;
}

interface FaqItem {
  question: string;
  answer: string;
}

const faqs: FaqItem[] = [
  {
    question: "Who is Quest?",
    answer: "I am the key that unlocks the door to your subconscious mind.\n\nThe Questions I ask are designed in-house after extensive primary and secondary research on human behavior and sociology. I use agentic AI architecture using reasoning models and large proprietary knowledgebase  on your responses to figure out the story behind the surface. "
  },
  {
    question: "Who is this test for?",
    answer: "This is for you if you want to understand:\n\n1. Your Untapped Potential\n2. What makes you unique.\n3. How the world sees you.\n\nand don't want to\n\n1. Pay for therapy.\n2. Live clueless about your psychology."
  },
  {
    question: "Is the test free?",
    answer: "The test is completely free.\n\nI will give you a summary report free of cost after analyzing your responses. If you like the summary, you can download the 35+ page PDF report generated by extensive analysis methods, which also incorporates your feedback to the free report."
  },
  {
    question: "How to maximize my benefit from this diagnosis?",
    answer: "Follow these guidelines while answering questions:\n\n1. Give more context - More details you provide, More accurate my analysis will become.\n\n2. Fill your responses like you are chatting with a close friend - This will give me a better understanding of you\n\n3. Be honest - People tend to respond like the person they want to become, but not how they truly are. This makes it difficult for me to analyse you properly\n\n4. Take your time - Don't rush through questions. Try to be accurate but also try to finish it in one sitting."
  },
  {
    question: "Is this a personality test?",
    answer: "I am not a typical personality test. Personality tests restrict you in boxes, compare you with an average statistic, doesn't allow you to give context, give complete details or reasons behind your answers.\n\nYou're not a statistic.\nYou're a story.\n\nThat's why I do things differently."
  },
  {
    question: "Is my personal information secure?",
    answer: "100%. Your identity is safe and secure. You can even stay anonymous while giving the test."
  }
];

const FaqSection: React.FC<FaqSectionProps> = ({ 
  className = '' 
}) => {
  const [openIndex, setOpenIndex] = useState<number | null>(0); // First item open by default

  const toggleFaq = (index: number) => {
    setOpenIndex(openIndex === index ? null : index);
  };

  return (
    <section 
      className={`w-full min-h-screen px-6 py-12 ${className}`}
      style={{ backgroundColor: '#004A7F' }}
    >
      {/* FAQ Title */}
      <div className="mb-12">
        <h2 
          className="text-white mb-8"
          style={{
            fontFamily: 'Gilroy-Medium',
            fontWeight: 400,
            fontSize: '40px',
            lineHeight: '100%',
            letterSpacing: '0%'
          }}
        >
          FAQs
        </h2>
      </div>

      {/* FAQ Items */}
      <div className="space-y-0">
        {faqs.map((faq, index) => (
          <div key={index} className="border-b border-white/20">
            {/* Question */}
            <button
              onClick={() => toggleFaq(index)}
              className="w-full py-6 flex items-center justify-between text-left hover:bg-white/5 transition-colors duration-200"
            >
              <h3 
                className="text-white pr-4"
                style={{
                  fontFamily: 'Gilroy-Regular',
                  fontWeight: 400,
                  fontSize: '28px',
                  lineHeight: '100%',
                  letterSpacing: '0%'
                }}
              >
                {faq.question}
              </h3>
              
              {/* Expand/Collapse Icon */}
              <motion.div
                animate={{ rotate: openIndex === index ? 45 : 0 }}
                transition={{ duration: 0.3, ease: "easeInOut" }}
                className="flex-shrink-0 w-8 h-8 flex items-center justify-center"
              >
                {openIndex === index ? (
                  <X size={24} className="text-white rotate-45" />
                ) : (
                  <Plus size={24} className="text-white" />
                )}
              </motion.div>
            </button>

            {/* Answer */}
            <AnimatePresence>
              {openIndex === index && (
                <motion.div
                  initial={{ height: 0, opacity: 0 }}
                  animate={{ height: "auto", opacity: 1 }}
                  exit={{ height: 0, opacity: 0 }}
                  transition={{ duration: 0.3, ease: "easeInOut" }}
                  className="overflow-hidden"
                >
                  <div className="pb-6 pr-12">
                    <p 
                      className="text-white whitespace-pre-line"
                      style={{
                        fontFamily: 'Gilroy-Regular',
                        fontWeight: 400,
                        fontSize: '20px',
                        lineHeight: '130%',
                        letterSpacing: '0%'
                      }}
                    >
                      {faq.answer}
                    </p>
                  </div>
                </motion.div>
              )}
            </AnimatePresence>
          </div>
        ))}
      </div>
    </section>
  );
};

export default FaqSection;
